{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","process","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","useEffect","prevCards","resetTurn","setTimeout","prevTurns","finishNum","filter","length","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAEe,SAASA,EAAT,GAAgE,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAOhE,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACE,qBAAKE,UAAU,QAAQC,IAAKL,EAAKK,IAAKC,IAAI,eAC1C,qBACEF,UAAU,OACVG,QAZY,WACbJ,GACHF,EAAaD,IAWTK,IAAKG,8BACLF,IAAI,eCbd,IAAMG,EAAa,CACjB,CAAEJ,IAAKG,iCAA8CE,SAAS,GAC9D,CAAEL,IAAKG,iCAA8CE,SAAS,GAC9D,CAAEL,IAAKG,+BAA4CE,SAAS,GAC5D,CAAEL,IAAKG,iCAA8CE,SAAS,GAC9D,CAAEL,IAAKG,iCAA8CE,SAAS,GAC9D,CAAEL,IAAKG,gCAA6CE,SAAS,IA8FhDC,MA3Ff,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOT,EAAP,KAAiBkB,EAAjB,KAGMC,EAAe,WACnB,IAAMC,EAAgB,UAAId,EAAeA,GACtCe,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAC3B,GAAD,mBAAC,eAAeA,GAAhB,IAAsB4B,GAAIH,KAAKC,cAEtCR,EAAa,MACbE,EAAa,MACbN,EAASS,GACTP,EAAS,IAILf,EAAe,SAACD,GACpBiB,EAAYG,EAAapB,GAAQkB,EAAalB,IAIhD6B,qBAAU,WACJZ,GAAaE,IACfE,GAAY,GACRJ,EAAUZ,MAAQc,EAAUd,KAC9BS,GAAS,SAACgB,GACR,OAAOA,EAAUH,KAAI,SAAC3B,GACpB,OAAIA,EAAKK,MAAQY,EAAUZ,IAClB,2BAAKL,GAAZ,IAAkBU,SAAS,IAEpBV,QAIb+B,KAEAC,YAAW,kBAAMD,MAAa,QAGjC,CAACd,EAAWE,IAGf,IAAMY,EAAY,WAChBb,EAAa,MACbE,EAAa,MACbJ,GAAS,SAACiB,GAAD,OAAeA,EAAY,KACpCZ,GAAY,IAmBd,OAfAQ,qBAAU,WACRP,MACC,IAGHO,qBAAU,WACR,IAAIK,EAAYrB,EAAMsB,QAAO,SAACnC,GAAD,OAA2B,IAAjBA,EAAKU,WAAkB0B,OAC1DF,GAAaA,IAAcrB,EAAMuB,QACnCJ,YAAW,WACTK,MAAM,yDAAD,OAA0DtB,IAC/DO,MACC,OAEJ,CAACT,IAGF,sBAAKT,UAAU,MAAf,UACE,6CACA,wBAAQG,QAASe,EAAjB,sBAEA,qBAAKlB,UAAU,YAAf,SACGS,EAAMc,KAAI,SAAC3B,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACNC,aAAcA,EACdC,QAASF,IAASiB,GAAajB,IAASmB,GAAanB,EAAKU,QAC1DP,SAAUA,GAJLH,EAAK4B,SAShB,wCAAWb,SC9FjBuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e2fdbedd.chunk.js","sourcesContent":["import \"./SingleCard.css\";\n\nexport default function SingleCard({ card, handleChoice, flipped, disabled }) {\n  const handleClick = () => {\n    if (!disabled) {\n      handleChoice(card);\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <div className={flipped ? \"flipped\" : \"\"}>\n        <img className=\"front\" src={card.src} alt=\"card front\" />\n        <img\n          className=\"back\"\n          onClick={handleClick}\n          src={process.env.PUBLIC_URL + \"/img/cover.png\"}\n          alt=\"cover\"\n        />\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport SingleCard from \"./components/SingleCard\";\n\nconst cardImages = [\n  { src: process.env.PUBLIC_URL + \"/img/helmet-1.png\", matched: false },\n  { src: process.env.PUBLIC_URL + \"/img/potion-1.png\", matched: false },\n  { src: process.env.PUBLIC_URL + \"/img/ring-1.png\", matched: false },\n  { src: process.env.PUBLIC_URL + \"/img/scroll-1.png\", matched: false },\n  { src: process.env.PUBLIC_URL + \"/img/shield-1.png\", matched: false },\n  { src: process.env.PUBLIC_URL + \"/img/sword-1.png\", matched: false },\n];\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  // shuffle cards for new game\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({ ...card, id: Math.random() }));\n\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setCards(shuffledCards);\n    setTurns(0);\n  };\n\n  // handle a choice\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  // compare 2 selected cards\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n      if (choiceOne.src === choiceTwo.src) {\n        setCards((prevCards) => {\n          return prevCards.map((card) => {\n            if (card.src === choiceOne.src) {\n              return { ...card, matched: true };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        setTimeout(() => resetTurn(), 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n\n  // reset choices & increase turn\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns((prevTurns) => prevTurns + 1);\n    setDisabled(false);\n  };\n\n  // start a new game automatically\n  useEffect(() => {\n    shuffleCards();\n  }, []);\n\n  // Check finish or not\n  useEffect(() => {\n    let finishNum = cards.filter((card) => card.matched === true).length;\n    if (finishNum && finishNum === cards.length) {\n      setTimeout(() => {\n        alert(`You have already finished the game, your total turns: ${turns}`);\n        shuffleCards();\n      }, 1000);\n    }\n  }, [cards]);\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className=\"card-grid\">\n        {cards.map((card) => (\n          <SingleCard\n            key={card.id}\n            card={card}\n            handleChoice={handleChoice}\n            flipped={card === choiceOne || card === choiceTwo || card.matched}\n            disabled={disabled}\n          />\n        ))}\n      </div>\n\n      <p>Turns: {turns}</p>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}